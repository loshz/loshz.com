{{define "content"}}
<p class="previous">&larr; <a href="/manage-channel-ops/">Previous</a></p>
<p class="next"><a href="/k8s-canary-release/">Next</a> &rarr;</p>
<h2>{{.Title}}</h2>
<p class="date">{{.DateTime.Format "2006-01-02"}} &sdot; 2 min read</p>
<p>Recently, I've been creating a lot of both internal and internet-facing LoadBalancer Services as this is a great way to expose your cluster to traffic. When doing this on AWS, unless specified otherwise, Kubernetes will automatically create a Classic Load Balancer and attach the relevant instances.</p>
<p>However, this got me thinking about duplicate ports on the same node assigned to different ELBs. How would Kubernetes handle this?</p>
<p>What actually happens when we set a Service type to <code>LoadBalancer</code> is Kubernetes will also expose a <code>NodePort</code> for each of the ports specified in the service.</p>
<p class="quote">...the Kubernetes master will allocate a port from a flag-configuw range (default: 30000-32767), and each Node will proxy that port (the same port number on every Node) into your Service...</p>
<p class="caption"><a href="https://kubernetes.io/docs/concepts/services-networking/service">https://kubernetes.io/docs/concepts/services-networking/service</a></p>
<p>For example, if I were to apply the following YAML:</p>
<pre class="yaml"><code><span class="r">apiVersion:</span> v1
<span class="r">kind:</span> Service
<span class="r">metadata:</span>
  <span class="r">name:</span> my-service
  <span class="r">labels:</span>
    <span class="r">app:</span> my-service
  <span class="r">annotations:</span>
    <span class="r">service.beta.kubernetes.io/aws-load-balancer-ssl-cert:</span> [AWS ARN]
    <span class="r">service.beta.kubernetes.io/aws-load-balancer-ssl-ports:</span> <span class="y">"443"</span>
<span class="r">spec:</span>
  <span class="r">ports:</span>
  - <span class="r">name:</span> http
    <span class="r">protocol:</span> TCP
    <span class="r">port:</span> 80
    <span class="r">targetPort:</span> 6000
  - <span class="r">name:</span> https
    <span class="r">protocol:</span> TCP
    <span class="r">port:</span> 443
    <span class="r">targetPort:</span> 6000
  <span class="r">type:</span> LoadBalancer
  <span class="r">selector:</span>
    <span class="r">app:</span> my-service</code></pre>
<p>I would see something like this in the AWS Console:</p>
<a href="/images/aws-elb-listeners.png"><img src="/images/aws-elb-listeners.png" alt="AWS ELB Listeners" /></a>
<p class="caption">AWS Console: Load Balancer Listeners</p>
<p>Although it is possible to configure these ports manually by specifying <code>spec.ports[*].nodePort</code>, Kubernetes will automatically check the current in-use node ports and only assign one that is available.<p>
<hr />
<h3>Resources</h3>
<ul>
	<li><a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html">Listeners for Your Classic Load Balancer</a></li>
	<li><a href="https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer">Kubernetes Service: LoadBalancer</a></li>
</ul>
{{end}}
